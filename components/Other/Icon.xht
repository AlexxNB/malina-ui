<script>
    import {resolveSource,getStyles, getSpin} from './../../lib/icon';

    export let src;
    export let color;
    export let size = 1;

    export let flipV = false;
    export let flipH = false;

    export let rotate = 0;
    export let spin = false;

    export let viewbox = '0 0 24 24';

    // Temporary fix
    $attributes;

    //Source type
	$: type = resolveSource(src);
    // Computed styles
	$: styles = getStyles(size,color,flipV,flipH,rotate);
    // Spin params
	$: sPrm = getSpin(spin);
    
</script>

{#if type == 'image'}
	<span {...$attributes} class="$main" style={styles} @@ ^>
		<img src="{src}" alt="" width="100%" height="100%" class="$img" class:spinCW={sPrm.CW} class:spinCCW={sPrm.CCW} style={sPrm.style} ^img/>
	</span>
{:else} 
    {#if type == 'sprite'}
        <svg viewBox={viewbox} {...$attributes} class="$main" style={styles} @@ ^>
            <use xlink:href={src} class:spinCW={sPrm.CW} class:spinCCW={sPrm.CCW} style={sPrm.style}></use>
        </svg>
    {:else}
        <svg viewBox={viewbox} {...$attributes} class="$main" style={styles} @@ ^>
        {#if spin !== false}
            <g class:spinCW={sPrm.CW} class:spinCCW={sPrm.CCW} style={sPrm.style}>
                <path d={src}></path>
            </g>
        {:else}
            <path d={src}></path>
        {/if}
        </svg>
    {/if}
{/if}

<style>
    @keyframes spin { to { transform: rotate(360deg) } }
	@keyframes spin-inverse { to { transform: rotate(-360deg) } }

	span{
		display: inline-block;
		line-height:1;
	}
    svg,span{
		vertical-align: middle;
        width: 1.6em;
        height: 1.6em;
        transform-origin: center;
	}
    svg{
        fill: currentColor
    }
	span img{
		padding:0px;
		margin:0px;
		vertical-align: middle;
	}

    .spinCW{
		animation: spin linear 2s infinite;
        transform-origin: center;
	}

	.spinCCW{
		animation: spin-inverse linear 2s infinite;
        transform-origin: center;
	}
</style>