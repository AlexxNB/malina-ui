<script>
    import Overlay from './../Utils/Overlay.xht';
    import Delayed from './../Utils/Delayed.xht';
    import {createAnimation} from '../../lib/animation';
    import {focusTrap} from '../../lib/utils';

    export let open = false;
    export let size = 30;
    export let closable = true;

    //Size
    $: cssSize = Number(size) ? `${size}rem` : size;
    
    //Side
    export let top = false;
    export let right = false;
    export let bottom = false;
    $: left = !right && !top && !bottom;

    let aSlide;
    function action(el){
        let side = ['marginLeft','width'];
        if(right) side = ['marginRight','width'];
        if(top) side = ['marginTop','height'];
        if(bottom) side = ['marginBottom','height']; 
        
        aSlide = createAnimation([
            {[side[1]]:cssSize, [side[0]]:`-${cssSize}`},
            {[side[1]]:cssSize, [side[0]]:0}
        ]);
        return aSlide.action(el);
    }

    const closeSidebar = ()=>closable && (open=false);

    $: open, ()=>aSlide && aSlide.reverse()
</script>
<Overlay {open} @click={closeSidebar} class="$overlay"/>
<Delayed show={open} >
    <div class="sidebar $main"
        *action
        *focusTrap
        class:left
        class:right
        class:top
        class:bottom
        class:vertical={right || left}
        class:horizont={top || bottom}
        @click={closeSidebar}
        {...$attributes}
        @@
        ^
    ><slot/></div>
</Delayed>

<style>
    div{
        position: fixed;
        z-index: 2;
        background-color: var(--color-soft);
        overflow: auto;
        animation-name: slideIn;
    }

    .vertical{
        top: 0;
        bottom:0;
    }

    .horizont{
        left: 0;
        right:0;
    }

    .left{ left:0}
    .right{ right:0}
    .top{top:0}
    .bottom{ bottom:0}
</style>
